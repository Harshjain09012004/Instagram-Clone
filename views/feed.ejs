<% include ./partials/header.ejs %>
  <div class="w-full min-h-screen bg-zinc-900 text-white py-5">
    <div class="w-full px-4 flex items-center justify-between">
      <img class="w-1/4" src="/images/logo.png" alt="">
      <div class="icons -mt-2 flex gap-5 items-center">
        <i class="text-[1.4rem] ri-heart-3-line"></i>
        <i class="text-[1.4rem] ri-messenger-line"></i>
      </div>
    </div>

    <div class="story px-3 flex gap-3 overflow-auto mt-5">
      <% for(var i=0;i< users.length;i++){ %>
      <div class="circle flex-shrink-0">
        <div
          class="gradient w-[18vw] h-[18vw] bg-sky-100 rounded-full bg-gradient-to-r from-purple-700 to-orange-500 flex items-center justify-center">
          <div class="inner w-[92%] h-[92%] rounded-full overflow-hidden">
            <img class="w-[100%] h-[100%] object-cover object-center" src="/images/uploads/<%= users[i].dpImage %>" alt="">
          </div>
        </div>
      </div>
      <% } %>
    </div>

    <div class="posts mb-20">
      <% for(var i=0;i< posts.length;i++) { %>
      <div class="post mt-10 w-full h-auto" data-post-id="<%= posts[i]._id %>">
        <div class="title px-4 flex items-center gap-2">
          <div class="w-[8vw] h-[8vw] bg-sky-100 rounded-full overflow-hidden">
            <img src="/images/uploads/<%= posts[i].userId.dpImage %>" alt="" class="w-full h-full">
          </div>
          <h4 class="text-sm"><%= posts[i].userId.username %></h4>
          <h6 class="text-xs opacity-30 time" date-data ="<%= posts[i].date %>">1d</h6>
        </div>
        <div class="max-w-full h-auto mt-4 bg-sky-100">
          <img src="/images/uploads/<%= posts[i].imageUrl %>" alt="" class="min-w-full">
        </div>
        <div class="options w-full px-4 flex justify-between items-center text-[1.4rem]">
          <div class="flex gap-3 mt-2">
            <i class="heartIcon ri-heart-3-fill"></i>
            <i class="ri-chat-3-line"></i>
            <i class="ri-share-circle-line"></i>
          </div>
          <i class="ri-bookmark-line"></i>
        </div>
        <h3 class="px-4 mt-2 text-sm leading-none tracking-tight"><%= posts[i].likes%> Likes</h3>
        <h2 class="text-white font-light text-sm mt-2"><span class="font-semibold pl-4 pr-2">
          <%= posts[i].userId.name %>
        </span><%= posts[i].caption %></h2>
      </div>
      <% } %>
    </div>
  </div>
  <script>

    function timeAgo(timestamp) {
        const now = new Date();
        const postDate = new Date(timestamp);
        const timeDifference = now - postDate;

        // Define time intervals in milliseconds
        const minute = 60 * 1000;
        const hour = 60 * minute;
        const day = 24 * hour;
        const month = 30 * day;
        const year = 365 * day;

        if (timeDifference < minute) {
          return 'Just now';
        } 
        else if (timeDifference < hour) {
          const minutes = Math.floor(timeDifference / minute);
          return `${minutes} ${minutes === 1 ? 'minute' : 'minutes'} ago`;
        } 
        else if (timeDifference < day) {
          const hours = Math.floor(timeDifference / hour);
          return `${hours} ${hours === 1 ? 'hour' : 'hours'} ago`;
        } 
        else if (timeDifference < month) {
          const days = Math.floor(timeDifference / day);
          return `${days} ${days === 1 ? 'day' : 'days'} ago`;
        } 
        else if (timeDifference < year) {
          const months = Math.floor(timeDifference / month);
          return `${months} ${months === 1 ? 'month' : 'months'} ago`;
        } 
        else {
          const years = Math.floor(timeDifference / year);
          return `${years} ${years === 1 ? 'year' : 'years'} ago`;
        }
      }

    const heartIcon = document.getElementsByClassName('heartIcon');
    
    fetch('/LikedPostsData',{
      method:"POST",
    })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
          .then(data => {
            var liked = data.likedPosts;
            Array.from(heartIcon).forEach(icon =>{
              var parent2 = icon.parentElement;
              var parent1 = parent2.parentElement;
              var parent0 = parent1.parentElement;
              var postId = parent0.getAttribute('data-post-id');

              if(liked.indexOf(postId)>=0)
              {
                icon.classList.add('text-red-500');
              }
            })
          })
          .catch(error => console.error('There was a problem with the fetch operation:', error));

    Array.from(heartIcon).forEach(icon =>{

      icon.addEventListener('click', function () 
      {
        icon.classList.toggle('text-red-500');

          var parent2 = icon.parentElement;
          var parent1 = parent2.parentElement;
          var parent0 = parent1.parentElement;
          var postId = parent0.getAttribute('data-post-id');

          if(icon.classList.contains('text-red-500'))
          {
            fetch(`/updateLikes/${postId}`, {
              method: 'POST',
            })
              .then(response => {
                if (!response.ok) {
                  throw new Error('Network response was not ok');
                }
                return response.json();
              })
              .catch(error => console.error('There was a problem with the fetch operation:', error));
          }

          else{
            fetch(`/reduceLikes/${postId}`, {
              method: 'POST',
            })
              .then(response => {
                if (!response.ok) {
                  throw new Error('Network response was not ok');
                }
                return response.json();
              })
              .catch(error => console.error('There was a problem with the fetch operation:', error));
          }
      });

    });
  
    var times = document.getElementsByClassName('time');
    
    Array.from(times).forEach(time =>{
      var timeData = time.getAttribute('date-data');
      var data = timeAgo(timeData);
      time.innerHTML = data;
    
    })

  </script>
  <% include ./partials/footer.ejs %>